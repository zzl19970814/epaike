<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xinsteel.epaike.dao.NodeInfoMapper" >
  <resultMap id="BaseResultMap" type="com.xinsteel.epaike.pojo.NodeInfo" >
    <constructor >
      <idArg column="orderid" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="nodeName" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="nodeCode" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="fileName" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="fileUrl" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    orderid, nodeName, nodeCode, fileName, fileUrl
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from nodeinfo
    where orderid = #{orderid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from nodeinfo
    where orderid = #{orderid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.xinsteel.epaike.pojo.NodeInfo" >
    insert into nodeinfo (orderid, nodeName, nodeCode, 
      fileName, fileUrl)
    values (#{orderid,jdbcType=VARCHAR}, #{nodename,jdbcType=VARCHAR}, #{nodecode,jdbcType=INTEGER}, 
      #{filename,jdbcType=VARCHAR}, #{fileurl,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xinsteel.epaike.pojo.NodeInfo" >
    insert into nodeinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        orderid,
      </if>
      <if test="nodename != null" >
        nodeName,
      </if>
      <if test="nodecode != null" >
        nodeCode,
      </if>
      <if test="filename != null" >
        fileName,
      </if>
      <if test="fileurl != null" >
        fileUrl,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="nodename != null" >
        #{nodename,jdbcType=VARCHAR},
      </if>
      <if test="nodecode != null" >
        #{nodecode,jdbcType=INTEGER},
      </if>
      <if test="filename != null" >
        #{filename,jdbcType=VARCHAR},
      </if>
      <if test="fileurl != null" >
        #{fileurl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xinsteel.epaike.pojo.NodeInfo" >
    update nodeinfo
    <set >
      <if test="nodename != null" >
        nodeName = #{nodename,jdbcType=VARCHAR},
      </if>
      <if test="nodecode != null" >
        nodeCode = #{nodecode,jdbcType=INTEGER},
      </if>
      <if test="filename != null" >
        fileName = #{filename,jdbcType=VARCHAR},
      </if>
      <if test="fileurl != null" >
        fileUrl = #{fileurl,jdbcType=VARCHAR},
      </if>
    </set>
    where orderid = #{orderid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xinsteel.epaike.pojo.NodeInfo" >
    update nodeinfo
    set nodeName = #{nodename,jdbcType=VARCHAR},
      nodeCode = #{nodecode,jdbcType=INTEGER},
      fileName = #{filename,jdbcType=VARCHAR},
      fileUrl = #{fileurl,jdbcType=VARCHAR}
    where orderid = #{orderid,jdbcType=VARCHAR}
  </update>
</mapper>